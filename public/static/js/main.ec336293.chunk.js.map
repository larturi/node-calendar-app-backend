{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","initalState","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventClearActiveEvent","eventUpdated","event","eventDeleted","eventsLoaded","eventAddNew","checkingFinish","startLogout","dispatch","clear","logout","login","user","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","finish","clone","initEvent","note","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","notes","useEffect","closeModal","isOpen","closeTimeoutMS","onRequestClose","style","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadious","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec336293.chunk.js","sourcesContent":["export const types = {\n \n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set active',\n    eventLogout: '[event] Logout event',\n\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n    authCheckingFinish: '[auth] Finish Checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking:  true,\n};\n\nexport const authReducer = ( state = initialState, action  ) => {\n\n    switch ( action.type ) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n    \n        default:\n            return state;\n        \n    }\n\n};  ","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload \n                ] \n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            };\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter( e => ( e.id !== state.activeEvent.id )),\n                activeEvent: null\n            };\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            };\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n};","import { types } from \"../types/types\";\n\nconst initalState = {\n    modalOpen: false\n};\n\nexport const uiReducer = (state = initalState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n    \n        default:\n            return state;\n    }\n\n};","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\n\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n\n});","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","\nconst baseURL = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method, \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n};\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch(url, {\n            method, \n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n};\n\nexport {\n    fetchSinToken,\n    fetchConToken\n};","import moment from 'moment';\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate(),\n        })\n    );\n\n};","import Swal from \"sweetalert2\";\n\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = ( event ) => {\n    return async ( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n        \n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                dispatch( eventAddNew(event) )\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    };\n};\n\nexport const eventSetActive = ( event ) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async (dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch( eventUpdated(event) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n};\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const startEventDeleted = () => {\n    return async (dispatch, getState) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n};\n\nconst eventDeleted = ( event ) => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n\n            dispatch( eventsLoaded(events) );\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    };\n};\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n});\n\nconst eventsLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\nexport const startLogin = ( email, password ) => {\n\n    return async ( dispatch ) => {\n        \n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    };\n\n};\n\nexport const startRegister = ( email, password, name ) => {\n    return async ( dispatch) => {\n\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n};\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const isCurrentToken = !!(localStorage.getItem('token') || '');\n \n        if (!isCurrentToken){\n            dispatch(checkingFinish()); \n            return;\n        }\n \n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) );\n\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ \n    type: types.authCheckingFinish \n});\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n\n    }\n};\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nconst logout = () => ({ type: types.authLogout });\n\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n   \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    };\n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'licha@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Candelaria',\n        rEmail: 'cande@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(lEmail, lPassword));\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\n        }\n        dispatch(startRegister(rEmail, rPassword1, rName));\n    };\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    };\n    \n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n            \n        </div>\n    )\n}\n","import React from 'react';\n\nexport const CalendarEvent = ( {event} ) => {\n    \n    const { title, user } = event;\n\n    return (\n        <div>\n            <span>{ title }</span> \n            <strong>{ ` (${user.name})` }</strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2'; \n\nimport { uiCloseModal } from '../../actions/ui';\n\nimport '../../styles.css';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst finish = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    note: '',\n    start: now.toDate(),\n    end: finish.toDate(),\n};\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n\n    const dispatch = useDispatch();\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(finish.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { title, notes, start, end } = formValues;\n\n    useEffect(() => {\n        if(activeEvent) {\n            setFormValues(activeEvent);\n        } else {\n            setFormValues(initEvent);\n        }\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent ());\n        setFormValues(initEvent); \n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error', 'La fecha de fin debe ser posterior a la de inicio', 'error');\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            // Alta\n            dispatch(eventStartUpdate( formValues ));\n        } else {\n            // Edicion\n            dispatch(eventStartAddNew( formValues ));\n        }\n\n        setTitleValid(true);\n        closeModal();\n    };\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          closeTimeoutMS={ 200 }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h2 className=\"mt-2 ml-2\"> { (activeEvent) ? activeEvent.title : 'Nuevo evento' } </h2>\n            <hr />\n\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal());\n    };\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startEventDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(startEventDeleted());\n    };\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { Navbar } from '../ui/Navbar';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n\n    // Leo los eventos del store\n    const { events, activeEvent } = useSelector(state => state.calendar);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    const { uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n       dispatch( eventStartLoading() );\n    }, [dispatch]);\n\n    const onDoubleClickEvent = (e) => {\n        dispatch(uiOpenModal());\n    };\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n     };\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    };\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367cf7' : '#465660',\n            borderRadious: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n    };\n\n    return (\n\n            <div className=\"calendar-screen\">\n\n                <Navbar />\n\n                <Calendar\n                    localizer={ localizer }\n                    events={ events }\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    messages={ messages }\n                    eventPropGetter={ eventStyleGetter }\n                    onDoubleClickEvent={ onDoubleClickEvent }\n                    onSelectEvent={ onSelectEvent }\n                    onView={ onViewChange }\n                    onSelectSlot={ onSelectSlot }\n                    selectable={ true }\n                    view={ lastView }\n                    components={{\n                        event: CalendarEvent\n                    }}\n                />\n\n                <AddNewFab />\n\n                {\n                    (activeEvent) && <DeleteEventFab/>\n                }\n\n                <CalendarModal />\n            \n            </div>\n\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        dispatch( startChecking() );\n    }, [dispatch])\n\n    if (checking) {\n      return (<h6 className=\"m-2\">Espere...</h6>)\n    } \n    \n    return (\n      <Router>\n        <div>\n          <Switch>\n\n            <PublicRoute \n              exact \n              path=\"/login\" \n              component={ LoginScreen } \n              isAuthenticated={ !!uid }\n            />\n\n            <PrivateRoute \n              exact\n              path=\"/\" \n              component={ CalendarScreen } \n              isAuthenticated={ !!uid }\n            />\n\n            <Redirect to=\"/login\" />\n\n          </Switch>\n        </div>\n      </Router>\n    );\n    \n    \n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider \n            store={store}\n        >\n             <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}